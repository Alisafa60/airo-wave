// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [postgis]
}

model UserType{
  id        Int     @id @default(autoincrement())
  type      Type
  user      User[]
}

enum Type{
  admin
  user
}

model User{
  id                Int       @id @default(autoincrement())
  email             String    @unique
  firstName         String
  lastName          String
  gender            String
  phone             String?
  address           String?
  password          String
  unit              MeasurementSystem
  userTypeId        Int
  userType          UserType @relation(fields: [userTypeId], references: [id])
  healthCondition   HealthCondition?
  location          UserLocation[]
}

enum MeasurementSystem{
  Metric
  Imperial
}

model Medication{
  id                      Int       @id @default(autoincrement())
  name                    String
  frequency               String
  dosage                  String
  startDate               DateTime
  respiratoryCondition    RespiratoryCondition[]
  allergy                 Allergy[]
}

model RespiratoryCondition{
  id                  Int       @id @default(autoincrement())
  condition           String
  diangnosis          String
  symptomsFrequency   String
  triggers            String
  medicationId        Int
  medications         Medication @relation(fields: [medicationId], references: [id])
  healthConditon      HealthCondition[]
}

model Allergy{
    id              Int       @id @default(autoincrement())
    allergen        String
    severity        String
    duration        String
    triggers        String
    medicationId    Int
    medications     Medication @relation(fields: [medicationId], references: [id])
    healthConditon  HealthCondition[]
}

model HealthCondition{
  id                      Int                   @id @default(autoincrement())
  weight                  Int
  bloodType               String
  userId                  Int                   @unique
  user                    User                  @relation(fields: [userId], references: [id])
  allergyId               Int
  allergy                 Allergy               @relation(fields: [allergyId], references: [id])
  respiratoryConditionId  Int
  respiratoryCondition    RespiratoryCondition  @relation(fields: [respiratoryConditionId], references: [id])
  dailyHealth             DailyHealth[]
}

model Device{
  id                      Int                   @id @default(autoincrement())
  name                    String
  manufacturer            String
  model                   String
  connectivityStatus      Int
  batteryLevel            String
  temperature             String?
  humidity                String?
  pollenLevel             String?
  co2Level                String?
  vocLevel                String?
  heartRate               String?
  powerData               String?
  bloodO2Level            String?
  sleepDuration           Int?
  sleepQuality            String?
  stressLevel             String?
  pm1_0                   Float?
  pm2_5                   Float?
  pm10                    Float?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}

model SleepData{
  id                      Int                   @id @default(autoincrement())
  duration                Int
  quality                 String
  dailyHealth             DailyHealth?
}

model StressData{
  id                      Int                   @id @default(autoincrement())
  stressLevel             String
  dailyHealth             DailyHealth[]
}

model DailyHealth{
  id                      Int                   @id @default(autoincrement())
  severity                Int
  userHealthId            Int
  healthConditions        HealthCondition       @relation(fields: [userHealthId], references: [id])
  sleepDataId             Int                   @unique
  sleepData               SleepData             @relation(fields: [sleepDataId], references: [id])
  stressDataId            Int
  stressLevels            StressData            @relation(fields: [stressDataId], references: [id])
}

model UserLocation {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  location   Unsupported("geography(Point, 4326)")
  createdAt  DateTime @default(now())
}


